{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","selectTodo","classNames","TodoFilter","query","setQuery","filterType","setFilterType","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterOptions","getUser","userId","Loader","TodoModal","setselectedTodo","useState","user","setUser","getUserFromServer","a","userFromServer","Error","href","email","name","App","setTodos","isLoaded","setIsLoaded","getTodosFromServer","todosFromServer","filter","toLowerCase","includes","ACTIVE","COMPLETED","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60aa0b24.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo,\n}) => {\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    { 'fa-eye': selectedTodo === null },\n                    { 'fa-eye-slash': selectedTodo?.id === todo.id })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  filterType: string;\n  setFilterType: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query, setQuery, filterType, setFilterType,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterType}\n          onChange={(event) => setFilterType(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nenum FilterOptions {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setselectedTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState('all');\n\n  const filterTodos = () => {\n    const visibleTodos = todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    )).filter(todo => {\n      switch (filterType) {\n        case FilterOptions.ACTIVE:\n          return !todo.completed;\n\n        case FilterOptions.COMPLETED:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n    return visibleTodos;\n  };\n\n  const getTodosFromServer = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsLoaded(true);\n    } catch (error) {\n      throw new Error('Todos are not found');\n    }\n  };\n\n  getTodosFromServer();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filterType={filterType}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? (\n                  <TodoList\n                    todos={filterTodos()}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setselectedTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setselectedTodo={setselectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  setselectedTodo: (value: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, setselectedTodo,\n}) => {\n  const {\n    id, title, completed, userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const getUserFromServer = async () => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n    } catch (error) {\n      throw new Error('User is not found');\n    }\n  };\n\n  getUserFromServer();\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!(user !== null) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setselectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}